[transmogrifier]
title = Plone Content Export Source
description =
pipeline = plone.export.content.source
prefix =
path = ${transmogrifier:prefix}

[plone.export.content.source]
blueprint = transmogrifier.pipeline
pipeline =
    plone.export.content.source.brains
    plone.export.content.source.filter_path
    plone.export.content.source.filter_prefix
    plone.export.content.source.get_path
    plone.export.content.source.get_type
    plone.export.content.source.get_object
    plone.export.content.source.behead
    plone.export.content.source.get_uuid
    plone.export.content.source.logger

[plone.export.content.source.brains]
blueprint = transmogrifier.from
_brain = python:context.portal_catalog.unrestrictedSearchResults(sort_on='path')

## XXX: This would be better, but GopIpIndex fails, because conversation does not have REQUEST
# _brain = python:context.portal_catalog.unrestrictedSearchResults(sort_on='getObjPositionInParent')

[plone.export.content.source.filter_path]
blueprint = transmogrifier.filter.or
path = ${transmogrifier:path}
expressions =
    is_exact
    is_below
is_exact = python:item['_brain'].getPath() == '${plone.export.content.source.filter_path:path}'
is_below = python:item['_brain'].getPath().startswith('${plone.export.content.source.filter_path:path}/')

[plone.export.content.source.filter_prefix]
blueprint = transmogrifier.filter.or
prefix = ${transmogrifier:prefix}
expressions =
    is_exact
    is_below
is_exact = python:item['_brain'].getPath() == '${plone.export.content.source.filter_prefix:prefix}'
is_below = python:item['_brain'].getPath().startswith('${plone.export.content.source.filter_prefix:prefix}/')

[plone.export.content.source.get_path]
blueprint = transmogrifier.set
_path = path:item/_brain/getPath

[plone.export.content.source.get_type]
blueprint = transmogrifier.set
_type = path:item/_brain/portal_type

[plone.export.content.source.get_object]
blueprint = transmogrifier.set
_object = path:item/_brain/_unrestrictedGetObject

[plone.export.content.source.get_uuid]
blueprint = plone.uuid.get
# blueprint = transmogrifier.set
# _uuid = path:item/_brain/UID  # May return Missing.Value (!)

[plone.export.content.source.behead]
blueprint = transmogrifier.set
expressions = _path
prefix = ${transmogrifier:prefix}
_path = python:item.get('_path')[len('${plone.export.content.source.behead:prefix}'):]

[plone.export.content.source.logger]
blueprint = transmogrifier.logger
level = WARNING
key = _path
